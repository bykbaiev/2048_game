// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Utils from "./Utils.mjs";
import * as React from "react";
import * as Belt_List from "../node_modules/rescript/lib/es6/belt_List.js";
import * as Belt_Array from "../node_modules/rescript/lib/es6/belt_Array.js";
import * as BoardModuleCss from "./Board.module.css";

var styles = BoardModuleCss;

var indexes = Belt_Array.makeBy(4, (function (idx) {
        return idx;
      }));

var tiles = {
  hd: {
    val: 2,
    pos: {
      x: 2,
      y: 2
    }
  },
  tl: {
    hd: {
      val: 1024,
      pos: {
        x: 0,
        y: 3
      }
    },
    tl: /* [] */0
  }
};

function getClassName(param) {
  return Utils.getCls(styles, param);
}

var viewList = Belt_Array.map;

function viewGridSizedList(param) {
  return Belt_Array.map(indexes, param);
}

function viewCell(rowId, cellId) {
  return React.createElement("div", {
              key: "" + rowId + "-" + cellId + "-cell",
              className: Utils.getCls(styles, "gridCell")
            });
}

function viewRow(rowId) {
  return React.createElement("div", {
              key: "" + rowId + "-row",
              className: Utils.getCls(styles, "gridRow")
            }, Belt_Array.map(indexes, (function (param) {
                    return viewCell(rowId, param);
                  })));
}

function viewTile(param) {
  var pos = param.pos;
  var val = param.val;
  var valName = val > 2048 ? "tileSuper" : "tile-" + val;
  var y = pos.y;
  var x = pos.x;
  var posName = "tilePosition-" + (x + 1 | 0).toString() + "-" + (y + 1 | 0).toString();
  return React.createElement("div", {
              key: "" + val + "-" + x + "-" + y + "-tile",
              className: Utils.getCls(styles, "tile") + " " + Utils.getCls(styles, valName) + " " + Utils.getCls(styles, posName)
            }, React.createElement("div", {
                  className: Utils.getCls(styles, "tileInner")
                }, val.toString()));
}

function Board(Props) {
  return React.createElement("div", {
              className: Utils.getCls(styles, "root")
            }, React.createElement("div", {
                  className: Utils.getCls(styles, "gridContainer")
                }, Belt_Array.map(indexes, viewRow)), React.createElement("div", {
                  className: Utils.getCls(styles, "tileContainer")
                }, Belt_Array.map(Belt_List.toArray(tiles), viewTile)));
}

var gridSize = 4;

var winningValue = 2048;

var make = Board;

export {
  styles ,
  gridSize ,
  winningValue ,
  indexes ,
  tiles ,
  getClassName ,
  viewList ,
  viewGridSizedList ,
  viewCell ,
  viewRow ,
  viewTile ,
  make ,
  
}
/* styles Not a pure module */
