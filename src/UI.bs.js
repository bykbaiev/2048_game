// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Rxjs = require("rxjs");
var Curry = require("bs-platform/lib/js/curry.js");
var Rx_Observable = require("@ambientlight/bs-rx/src/internal/Rx_Observable.bs.js");
var Operators = require("rxjs/operators");
var Rx_BehaviorSubject = require("@ambientlight/bs-rx/src/internal/Rx_BehaviorSubject.bs.js");
var State$FeedbackLoop = require("./State.bs.js");
var HtmlDom$FeedbackLoop = require("./HtmlDom.bs.js");

var keyDownStream = new Rxjs.Subject();

HtmlDom$FeedbackLoop.onDOMContentLoaded((function (param) {
        HtmlDom$FeedbackLoop.updateUI(HtmlDom$FeedbackLoop.getUIMessage("Have fun"));
        var partial_arg = (function (value) {
            keyDownStream.next(value);
            return /* () */0;
          });
        return (function (eta) {
                    var param = undefined;
                    var param$1 = undefined;
                    var param$2 = eta;
                    return Rx_Observable.Observable.subscribe(partial_arg, param, param$1, param$2);
                  })(Curry._1(Operators.map((function (value, param) {
                              var match = value.keyCode;
                              switch (match) {
                                case 37 :
                                    return /* LEFT */2;
                                case 38 :
                                    return /* UP */0;
                                case 39 :
                                    return /* RIGHT */1;
                                default:
                                  return /* DOWN */3;
                              }
                            })), Curry._1(Operators.filter((function (value, param) {
                                  var match = value.keyCode;
                                  return !(match > 40 || match < 37);
                                })), Curry._1(Operators.map((function (value, param) {
                                      return value;
                                    })), Rxjs.fromEvent(document, "keydown")))));
      }));

var arg = Curry._1(Rx_BehaviorSubject.subscribe, (function (value) {
        console.log(State$FeedbackLoop.GameState.mapBoardToJs(value));
        return /* () */0;
      }));

((function (eta) {
        return Curry._3(arg, undefined, undefined, eta);
      })(State$FeedbackLoop.GameState.board));

var UI = {
  keyDownStream: keyDownStream
};

exports.UI = UI;
/* keyDownStream Not a pure module */
