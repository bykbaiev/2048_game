// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Rxjs = require("rxjs");
var Curry = require("bs-platform/lib/js/curry.js");
var Rx_Observable = require("@ambientlight/bs-rx/src/internal/Rx_Observable.bs.js");
var Operators = require("rxjs/operators");

var keyDownStream = new Rxjs.Subject();

var domDocument = document;

var onDOMContentLoaded = (function(handler) {
                document.addEventListener('DOMContentLoaded', handler, false);
            });

function getUIMessage(text) {
  return /* :: */[
          text,
          /* [] */0
        ];
}

var updateUI = (function(jsx) {
                document.querySelector('#app').innerHTML = jsx;
            });

onDOMContentLoaded((function (param) {
        updateUI(/* :: */[
              "Have fun",
              /* [] */0
            ]);
        var partial_arg = (function (value) {
            keyDownStream.next({
                  keyCode: value.keyCode
                });
            return /* () */0;
          });
        return (function (eta) {
                    var param = undefined;
                    var param$1 = undefined;
                    var param$2 = eta;
                    return Rx_Observable.Observable.subscribe(partial_arg, param, param$1, param$2);
                  })(Curry._1(Operators.filter((function (value, param) {
                              var match = value.keyCode;
                              return !(match > 40 || match < 37);
                            })), Rxjs.fromEvent(domDocument, "keydown")));
      }));

var UI = {
  keyDownStream: keyDownStream,
  domDocument: domDocument,
  onDOMContentLoaded: onDOMContentLoaded,
  getUIMessage: getUIMessage,
  updateUI: updateUI
};

exports.UI = UI;
/* keyDownStream Not a pure module */
